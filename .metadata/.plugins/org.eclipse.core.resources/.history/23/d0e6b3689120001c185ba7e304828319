package com.bitly.getgroups;

import static org.testng.AssertJUnit.assertEquals;
import org.testng.annotations.Test;
import io.restassured.RestAssured;
import io.restassured.http.Method;
import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;

public class TC02_CreateBitlink {
	String token="cc034adfdc77be75e9adb892a0bd6d4bb1da7372";
  @Test
  public void createBitlink() {
	  
	  try{
		  RestAssured.baseURI="https://api-ssl.bitly.com";
		  RequestSpecification rs=RestAssured.given();
          Response response=rs.header("Authorization", "Bearer "+token).contentType("application/json").body("{\"long_url\":\"https://google.com\"}").request(Method.POST,"/v4/shorten");
          int statuscode = response.getStatusCode();
          assertEquals(statuscode,200);
		  	  
	  }
	  catch(Exception e)
	  {
		  System.out.println(e);
	  }
	  
  }
  
  /*@Test
  public void createBitlinkWithoutToken() {
	 //Verify if bearer token is not passed user gets 403: forbidden error
	 try
	 {
		 
		 RestAssured.baseURI="https://api-ssl.bitly.com";
		  RequestSpecification rs=RestAssured.given();
		  Response response=rs.contentType("application/json").body("{\"long_url\":\"https://google.com\"}").request(Method.POST,"/v4/shorten");
		  String responseBody = response.getBody().asString();
		  System.out.println(responseBody);
		  int statuscode=response.getStatusCode();
		  assertEquals(statuscode,403);
	  
	  }
	  
	  catch(Exception e)
	  {
		  System.out.println(e);
	  }
	  
 }
  
  @Test
  public void createBitlinkHavingIncorrectURI() {
	 //Verify if URI is incorrect user gets 404:Not Found
	 try
	 {
		 
		 RestAssured.baseURI="https://api-ssl.bitly.com";
		  RequestSpecification rs=RestAssured.given();
		  Response response=rs.header("Authorization", "Bearer "+token).contentType("application/json").body("{\"long_url\":\"https://google.com\"}").request(Method.POST,"/v4/shorte");
		  String responseBody = response.getBody().asString();
		  int statuscode=response.getStatusCode();
		  assertEquals(statuscode,404);
	  
	  }
	  
	  catch(Exception e)
	  {
		  System.out.println(e);
	  }
	  
 }*/
  
  
  

}
